<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.tyros</groupId>
    <artifactId>tyros-parent</artifactId>
    <version>0.1.0</version>
    <packaging>pom</packaging>

    <properties>
        <tyros.version>${project.version}</tyros.version>
        <java.version>1.8</java.version>
        <resource.delimiter>@</resource.delimiter>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <druid.version>1.1.20</druid.version>
        <mybatis.plus.version>3.4.3.2</mybatis.plus.version>
        <fastjson.version>1.2.75</fastjson.version>
        <swagger.version>1.5.22</swagger.version>
        <hutool.version>5.7.20</hutool.version>
        <knife4j.version>3.0.3</knife4j.version>
        <springboot.version>2.6.3</springboot.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.tyros.common</groupId>
                <artifactId>tyros-common</artifactId>
                <version>${tyros.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${springboot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis.plus.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/com.github.xiaoymin/knife4j-spring-boot-starter -->
            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>knife4j-spring-boot-starter</artifactId>
                <version>${knife4j.version}</version>
            </dependency>
            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-annotations</artifactId>
                <version>${swagger.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!-- 本地暂存地址 -->
    <distributionManagement>
        <repository>
            <id>internal.repo</id>
            <name>Local Staging Repository</name>
            <url>file://${project.build.directory}/mvn-repo</url>
        </repository>
    </distributionManagement>

    <build>
        <plugins>
            <!-- 要将源码放上去，需要加入这个插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.2.1</version>
                <configuration>
                    <attach>true</attach>
                </configuration>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.8.2</version>
                <configuration>
                    <altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo
                    </altDeploymentRepository>
                </configuration>
            </plugin>
            <!--github上传插件,用于修改后的发布,执行 mvn clean deploy 自动打包上传到github-->
            <plugin>
                <groupId>com.github.github</groupId>
                <artifactId>site-maven-plugin</artifactId>
                <version>0.12</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>site</goal>
                        </goals>
                        <phase>deploy</phase>
                        <configuration>
                            <!-- maven/conf/setting 中配置 -->
                            <server>github</server>
                            <message>feat: deploy ${project.artifactId} ${project.version}</message>
                            <noJekyll>true</noJekyll>
                            <!--本地jar地址, 对应上面的altDeploymentRepository-->
                            <outputDirectory>${project.build.directory}/mvn-repo</outputDirectory>
                            <!--分支-->
                            <branch>refs/heads/master</branch>
                            <merge>true</merge>
                            <includes>
                                <include>**/*</include>
                            </includes>
                            <!--对应github上创建的仓库名称 name-->
                            <repositoryName>mvn-repo</repositoryName>
                            <!--github登录账号 对应的密码存在maven的setting.xml文件中-->
                            <!--由github组织拥有，则该值将是组织名称，如果由用户拥有，则该值将是用户名-->
                            <repositoryOwner>zsy0216</repositoryOwner>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
